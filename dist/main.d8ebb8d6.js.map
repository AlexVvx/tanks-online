{"version":3,"sources":["scripts/main.js"],"names":["serverUrl","devServerUrl","ws","WebSocket","Tank","width","height","beginX","beginY","canvasEl","document","querySelector","canvasElWidth","canvasElHeight","ctx","getContext","strokeStyle","draw","duloWidth","duloLength","strokeRect","x","y","clearRect","myTank","onopen","open","send","onmessage","incoming","event","console","log","data","split","move"],"mappings":";;;;;;;;;;;;;;AAAA,IAAMA,SAAS,GAAG,oCAAlB;AACA,IAAMC,YAAY,GAAG,qBAArB;AACA,IAAMC,EAAE,GAAG,IAAIC,SAAJ,CAAcF,YAAd,CAAX;;IAEMG;;;AACF,gBAAYC,KAAZ,EAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,MAAnC,EAA2C;AAAA;;AACvC,SAAKH,KAAL,GAAaA,KAAb;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,QAAMG,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,SAAvB,CAAjB;AACA,SAAKC,aAAL,GAAqB,IAArB;AACA,SAAKC,cAAL,GAAsB,GAAtB;AACAJ,IAAAA,QAAQ,CAACJ,KAAT,GAAiB,KAAKO,aAAtB;AACAH,IAAAA,QAAQ,CAACH,MAAT,GAAkB,KAAKO,cAAvB;AACA,SAAKC,GAAL,GAAWL,QAAQ,CAACM,UAAT,CAAoB,IAApB,CAAX;AACA,SAAKD,GAAL,CAASE,WAAT,GAAuB,KAAvB;AACA,SAAKC,IAAL,CAAUV,MAAV,EAAkBC,MAAlB;AACH;;;;yBAEID,QAAQC,QAAQ;AACjB,UAAMU,SAAS,GAAG,EAAlB;AACA,UAAMC,UAAU,GAAGD,SAAS,GAAG,CAA/B;AACA,WAAKJ,GAAL,CAASM,UAAT,CAAoBb,MAApB,EAA4BC,MAA5B,EAAoC,KAAKH,KAAzC,EAAgD,KAAKC,MAArD;AACA,WAAKQ,GAAL,CAASM,UAAT,CAAoBb,MAAM,GAAI,KAAKF,KAAL,GAAa,CAAvB,GAA4Ba,SAAS,GAAG,CAA5D,EACIV,MAAM,GAAG,KAAKF,MADlB,EAC0BY,SAD1B,EACqCC,UADrC;AAEH;;;yBAEIE,GAAGC,GAAG;AACP,WAAKR,GAAL,CAASS,SAAT,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAKX,aAA9B,EAA6C,KAAKC,cAAlD;AACA,WAAKI,IAAL,CAAUI,CAAV,EAAaC,CAAb;AACH;;;;;;AAIL,IAAME,MAAM,GAAG,IAAIpB,IAAJ,CAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,CAAf;;AAEAF,EAAE,CAACuB,MAAH,GAAY,SAASC,IAAT,GAAgB;AACxBxB,EAAAA,EAAE,CAACyB,IAAH,CAAQ,oBAAR;AACH,CAFD;;AAIAzB,EAAE,CAAC0B,SAAH,GAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACpCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAlB;;AADoC,0BAErBH,KAAK,CAACG,IAAN,CAAWC,KAAX,CAAiB,GAAjB,CAFqB;AAAA;AAAA,MAE7Bb,CAF6B;AAAA,MAE1BC,CAF0B;;AAGpCE,EAAAA,MAAM,CAACW,IAAP,CAAYd,CAAZ,EAAeC,CAAf;AACH,CAJD","file":"main.d8ebb8d6.js","sourceRoot":"../client","sourcesContent":["const serverUrl = 'ws://fast-cove-62764.herokuapp.com';\nconst devServerUrl = 'ws://127.0.0.1:5000';\nconst ws = new WebSocket(devServerUrl);\n\nclass Tank {\n    constructor(width, height, beginX, beginY) {\n        this.width = width;\n        this.height = height;\n        const canvasEl = document.querySelector('#canvas');\n        this.canvasElWidth = 1000;\n        this.canvasElHeight = 600;\n        canvasEl.width = this.canvasElWidth;\n        canvasEl.height = this.canvasElHeight;\n        this.ctx = canvasEl.getContext('2d');\n        this.ctx.strokeStyle = 'red';\n        this.draw(beginX, beginY);\n    }\n\n    draw(beginX, beginY) {\n        const duloWidth = 10;\n        const duloLength = duloWidth * 4\n        this.ctx.strokeRect(beginX, beginY, this.width, this.height);\n        this.ctx.strokeRect(beginX + (this.width / 2) - duloWidth / 2,\n            beginY + this.height, duloWidth, duloLength);\n    }\n\n    move(x, y) {\n        this.ctx.clearRect(0, 0, this.canvasElWidth, this.canvasElHeight);\n        this.draw(x, y);\n    }\n\n}\n\nconst myTank = new Tank(50, 70, 50, 50);\n\nws.onopen = function open() {\n    ws.send('tanks data initial');\n};\n\nws.onmessage = function incoming(event) {\n    console.log(event.data);\n    const [x, y] = event.data.split(',');\n    myTank.move(x, y);\n};"]}